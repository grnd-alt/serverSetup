map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}
server {
    listen 80;
    listen [::]:80;
    server_name _;
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
	index test.html;
    }
}
server {
    listen 80;
    server_tokens off;
    server_name *.${SERVER_BASE_DOMAIN} ${SERVER_BASE_DOMAIN};
    location / {
        return 301 https://$host/$request_uri;
    }
}


server {
    listen 443 ssl;
    listen [::]:443 ssl;
    ssl_certificate /etc/nginx/ssl/live/opfer.${SERVER_BASE_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/opfer.${SERVER_BASE_DOMAIN}/privkey.pem;
    server_name opfer.${SERVER_BASE_DOMAIN} www.opfer.${SERVER_BASE_DOMAIN};
    server_tokens off;
    location / {
        root   /usr/share/nginx/html/opfer/;
        index  index.html index.htm;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    ssl_certificate /etc/nginx/ssl/live/grafana.${SERVER_BASE_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/grafana.${SERVER_BASE_DOMAIN}/privkey.pem;
    server_name grafana.${SERVER_BASE_DOMAIN} www.grafana.${SERVER_BASE_DOMAIN};
    server_tokens off;
    location / {
        proxy_pass http://grafana:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    ssl_certificate /etc/nginx/ssl/live/stream.${SERVER_BASE_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/stream.${SERVER_BASE_DOMAIN}/privkey.pem;
    server_name stream.${SERVER_BASE_DOMAIN} www.stream.${SERVER_BASE_DOMAIN};

    location / {
        proxy_pass http://rtmpStreaming:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}


server {
    listen 443 ssl;
    listen [::]:443 ssl;
    ssl_certificate /etc/nginx/ssl/live/${SERVER_BASE_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/${SERVER_BASE_DOMAIN}/privkey.pem;
    server_name ${SERVER_BASE_DOMAIN} www.${SERVER_BASE_DOMAIN};
    server_tokens off;
    location / {
        root   /usr/share/nginx/html/home/;
        index  index.html index.htm;
    }
}

server {
    listen       443 default_server ssl http2;
    listen [::]:443 ssl http2;
    server_name  nextcloud.${SERVER_BASE_DOMAIN};
    server_tokens off;
    ssl_certificate /etc/nginx/ssl/live/nextcloud.${SERVER_BASE_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/nextcloud.${SERVER_BASE_DOMAIN}/privkey.pem;
    add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";
    client_max_body_size 4196M;

    location / {
        proxy_pass http://172.17.0.1:11000$request_uri;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Scheme $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Accept-Encoding "";
        proxy_set_header Host $host;
    
        client_body_buffer_size 512k;
        proxy_read_timeout 86400s;
        client_max_body_size 0;

        # Websocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
